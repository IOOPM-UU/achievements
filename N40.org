#+html: <a name="40"></a>
** N40: Kompilering, länkning och interpretering :G3:Lab:

 #+BEGIN_SUMMARY
 Demonstrera på lämpligt sätt förståelse för termerna kompilering, länkning, interpretering och JIT-kompilering och hur dessa används i C och Java.
 #+END_SUMMARY

 Fundera över skillnaderna mellan länkning i C och Java och när
 länkning sker.
 
 Det här målet handlar om att resonera om vad som händer under länkning, kompilering och interpretering och varför. Vad länkas ihop och varför? När händer det? Vad är skillnaden mellan C och Java? Vad är skillnaden mellan en JIT-kompilator, en "vanlig" ahead-of-time-kompilator som GCC, och att interpretera ett program? Vilka steg är inblandade? Kan Javas HotSpot göra saker som GCC inte kan, och vice versa? Osv.
 
 Ett lästips (som går in väldigt mycket djupare än du behöver göra) för länkning är boken [[https://tinyurl.com/yxwjg83m][Linkers & Loaders av John Levine]].

 Ledning: med hjälp av enkla prestandamätningar kan man mäta tiden
 för JIT-kompilering och även dess inverkan på prestanda hos kod
 efter att den kompilerats.
 

-----

*Report a bug on this achievement?* Please place an issue on [[https://github.com/IOOPM-UU/achievements/issues/new?title=Bug%20in%20achievement%20N40&body=Please%20describe%20the%20bug,%20comment%20or%20issue%20here&assignee=TobiasWrigstad][GitHub]].
