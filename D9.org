#+html: <a name="9"></a>
** D9: Documentation                                                 :G3:Lab:

#+begin_summary
Write API documentation for non-trivial modules in such a way that
they can be used easily by others. 
#+end_summary

- Consider who is your audienece! Documenting something specific
  to one project you can expect your reader to know something
  about the domain of the system. If you document a general API
  (like say a hash table), you can assume very little from your
  reader.
- Explain parameters
- Explain preconditions and postconditions
- State any key invariants 
- Give useful examples of uses

 Bra dokumentation är av största vikt vid utveckling. Vid en kort
 kurs som denna är det svårt att uppleva nyttan med dokumentation
 som man själv skriver eftersom det inte hinner gå tillräckligt
 lång tid under kursen för att sådant man utvecklat skall falla
 tillräckligt i glömska. (Ta gärna fram någon gammal
 inlämningsuppgift i Haskell från PKD och försök följa logiken och
 ändra i den.)

 - Det är svårt att balansera mängden dokumentation som krävs för
   att beskriva något. Vem vänder man sig till? Vad kan man
   förvänta sig hos den som läser? Vad vill denne åstadkomma?
 - Vad är en bra balans mellan för lite information och för mycket?
   Vad är en lämplig detaljnivå?
 - Hur mycket av den interna implementationen bör man beskriva?
   Varför?
 - Hur beskriver man komplexa och tvetydiga processer?

 I funktionella språk som Haskell är pre- och postvillkor bra sätt
 att dokumentera förväntningar och löften på ett sätt som inte
 exponerar onödiga detaljer. Javaprogram har i regel tonvis med
 sido-effekter -- vad får det för konsekvens för pre- och
 postvillkor?



-----

*Report a bug on this achievement?* Please place an issue on [[https://github.com/IOOPM-UU/achievements/issues/new?title=Bug%20in%20achievement%20D9&body=Please%20describe%20the%20bug,%20comment%20or%20issue%20here&assignee=TobiasWrigstad][GitHub]].
